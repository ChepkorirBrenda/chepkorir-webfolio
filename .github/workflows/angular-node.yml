name: Node.js CI

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [10.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm install
    - run: npm update  
    - run: npm run heroku-postbuild --if-present
    - name: create dist artifact
      uses: actions/upload-artifact@v1
      with:
         name: dist
         path: dist
    #- run: npm test
      env:
        CI: true

  dockerize:
    name: Get dist artifact and containerize
    needs: build
    
    runs-on: [ubuntu-latest]
    
    steps:
    - name: Get dist artifact
      uses: actions/download-artifact@v1
      with:
         name: dist
    - name: Create server file
      run: printf "const express = require('express');\nconst path = require('path');\nconst app = express();\napp.use(express.static(__dirname + '/dist/chepkorir-webfolio'));\napp.get('/*', (req,res) => {res.sendFile(path.join(__dirname+'/dist/chepkorir-webfolio/index.html'));});\napp.listen(process.env.PORT || 4200);" | cat -> server.js
      
    - name: Create Dockerfile
      run: printf "FROM node:10.19.0-alpine3.9\nWORKDIR /home/angular/webfolio\nRUN npm install express path\nCOPY /dist/chepkorir-webfolio ./\nEXPOSE 8088\nCMD ['node', 'server.js']" | cat -> Dockerfile
      
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag ${{secrets.docker_image}}:v2
      
    - name: Docker Publish
      uses: manusa/actions-publish-docker@v1.0.1
      with:
        # Name of the Docker image
        name: ${{secrets.docker_image}}
        # Tag for the Docker image
        tag: v2
        # Username for Docker registry
        username: ${{secrets.docker_username}}
        # Password for Docker registry
        password: ${{secrets.docker_password}}
        # Registry URL
        # registry: ${{secrets.docker_registry}}
